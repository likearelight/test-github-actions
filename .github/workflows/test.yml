name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk

env:
    EB_PACKAGE_S3_BUCKET_NAME   : "adv-it-flask-app-packages1"
    EB_APPLICATION_NAME         : "Myflask"
    EB_ENV_NAME                 : "Myflask-env"
    DEPLOY_PACKAGE_NAME         : "flask_app_${{ github.sha }}.zip"
    AWS_REGION_NAME             : "us-west-2"
  
on: 
    push:
       branches: 
         - master
      
jobs:
    my_ci_pipeline:
       runs-on: ubuntu-latest
       
       steps:
        - name: Git clone repo
          uses: actions/checkout@v1
      
        - name: Create zip deployment package
          run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
          
        - name: Configure my AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id      : ${{ secrets.MY_AWS_ACCESS_KEY }}
            aws-secret-access-key  : ${{ secrets.MY_AWS_SECRET_KEY }}
            aws-region             : ${{ env.AWS_REGION_NAME }}   
        - name: Copy deployment package to S3bucket
          run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      
        - name: Print message for success
          run : echo "CI pipeline part finished successfully!!"
    my_cd_pipeline:
       runs-on: ubuntu-latest
       needs: [my_ci_pipeline]
       
       steps:
        - name: Configure my AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id      : ${{ secrets.MY_AWS_ACCESS_KEY }}
            aws-secret-access-key  : ${{ secrets.MY_AWS_SECRET_KEY }}
            aws-region             : ${{ env.AWS_REGION_NAME }}
        - name: Create new ElasticBeansTalk app
          run : |
                aws elasticbeanstalk create-application-version \
                --application-name ${{ env.EB_APPLICATION_NAME  }} \
                --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
                --version-label "Ver-${{ github.sha }}" \
                --description "CommitSHA-${{ github.sha }}"
                
        - name: Deply new ElasticBeansTalk app version
          run : aws elasticbeanstalk update-enviromet --enviroment-name ${{ env.EB_ENV_NAME }} --version-label "Ver-${{ github.sha }}"
         
        - name: Print message for success
          run : echo "CD pipeline part finished successfully!!"
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
